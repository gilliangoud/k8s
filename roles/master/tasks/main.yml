---
# tasks file for master
- name: Reset Kubernetes Master
  shell: kubeadm reset -f
  register: kubeadm_reset

- name: "pull images {{ kubernetes_version }}"
  shell: kubeadm config images pull
  when: kubeadm_reset is succeeded
  become: true

- name: "Initialize Master {{ kubernetes_version }}"
  shell: kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --token={{ token }} --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ podnet }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded
  become: true

- name: Create Kubernetes config directory
  file:
    path: /home/{{ ssh-user }}/.kube/
    state: directory
    owner: {{ ssh-user }}
    group: {{ ssh-user }}
    mode: 0755

- name: Copy admin.conf to config directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ssh-user }}/.kube/config
    owner: {{ ssh-user }}
    group: {{ ssh-user }}
    mode: 0755
    remote_src: yes
    backup: yes
  when: kubeadm_init

- name: Enable root to use kubectl - folder
  file:
    path: "/root/.kube"
    state: directory
- name: Enable root to use kubectl - file
  copy:
    src: /home/{{ ssh-user }}/.kube/config
    dest: /root/.kube/config
    remote_src: yes

- name: Join Kubernetes Cluster
  shell: kubeadm join --ignore-preflight-errors=all --token {{ token }} {{ groups['master'][0] }}:6443 --discovery-token-unsafe-skip-ca-verification
  when: kubeadm_reset is succeeded
  register: kubeadm_join

# - name: install Flannel (Networking)
#   become: no
#   k8s_raw:
#     state: present
#     # definition: "{{ lookup('url', 'https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml') | to_yaml_all }}"
#     definition: "{{ lookup('template', 'files/flannel.yml', convert_data=False) }}"

- name: Install Flannel (Networking) oldfashioned style
  become: no
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml

- name: Poke kubelet
  systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes
    enabled: yes
  register: kubelet_poke

- name: sleep for 30 seconds and continue with play
  wait_for: timeout=30
  delegate_to: localhost
