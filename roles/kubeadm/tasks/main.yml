---
- name: Ensure hostname set
  hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')
  register: hostname
  tags: hostname

# - name: Ensure hostname is in /etc/hosts
#   lineinfile:
#     dest: /etc/hosts
#     regexp: "^{{ ansible_default_ipv4.address }}.+$"
#     line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
#   register: hostname
#   tags: hostname

- name: Add IP address of all hosts to all hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{item}}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.all }}"

# tasks file for kubeadm
- include: docker.yml

- name: Install python PIP
  apt: name={{item}} state=latest
  with_items:
    - python-pip

- name: Install pip openshift
  pip: name={{ item }} state=latest
  with_items:
    - "openshift"

# https://gist.github.com/alexellis/fdbc90de7691a1b9edb545c17da2d975
- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent
- name: Disable swap
  command: swapoff -a
- name: remove swap
  shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Pass bridged IPv4 traffic to iptables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

# https://kubernetes.io/docs/setup/independent/install-kubeadm/

- name: Add Google Cloud Repo Key
  shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
  args:
    warn: no

- name: Add Kubernetes to Available apt Sources
  template:
    src: kubernetes.list
    dest: /etc/apt/sources.list.d/kubernetes.list
    owner: pi
    group: pi
    mode: 0644

- name: apt-get update
  apt:
    update_cache: yes
    autoclean: yes
    autoremove: yes

- name: Install k8s {{ kubernetes_package_version }} Y'all
  apt:
    name: "{{ item }}={{ kubernetes_package_version }}"
    state: present
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: Reboot Message
  debug:
    msg: "REBOOTING ALL NODES."
- name: Reboot (as needed)
  reboot:
    reboot_timeout: 3600
  tags:
    - boot
    - shutdown