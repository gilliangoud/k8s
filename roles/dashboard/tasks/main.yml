---
# - name: Install k8s Dashboard
#   become: no
#   k8s_raw:
#     state: present
#     definition: "{{ lookup('url', 'https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml')}}"
- name: Install k8s Dashboard local file
  become: no
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'files/dashboard.yml')}}"

# - name: Install Dashboard oldfashioned style
#   become: no
#   shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml

- name: give rights
  become: no
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'files/rights.yml')}}"

- name: Force Rebuild Dashboard Pods
  shell: kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name | grep dashboard)
  become: no

- name: Give dashboard external IP from loadbalancer
  become: no
  k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: kubernetes-dashboard-loadbalancer
      spec:
        type: LoadBalancer
        ports:
          - port: 443
            targetPort: 8443
        selector:
          k8s-app: kubernetes-dashboard

- name: Allow dashboard access through ingress
  become: no
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: dashboard-ingress
        namespace: kube-system
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          ingress.kubernetes.io/ssl-redirect: "true"
          ingress.kubernetes.io/use-port-in-redirects: "true"
          nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local
      spec:
        tls:
        - hosts:
          - dashboard
          secretName: dashboard-tls
        rules:
        - host: dashboard
          http:
            paths:
            - path: /
              backend:
                serviceName: kubernetes-dashboard
                servicePort: 443

- name: Fetch kubeconfig file
  fetch:
    src: /home/{{ ssh-user }}/.kube/config
    dest: ~/.kube/config
    flat: yes

- name: Enable root to use kubectl - folder
  file:
    path: "/root/.kube"
    state: directory
- name: Enable root to use kubectl - file
  copy:
    src: /home/{{ ssh-user }}/.kube/config
    dest: /root/.kube/config
    remote_src: yes
